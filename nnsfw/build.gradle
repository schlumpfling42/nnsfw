import com.github.jengelman.gradle.plugins.shadow.tasks.ConfigureShadowRelocation

plugins {
  id 'com.github.johnrengelman.shadow' version '7.1.2'
  id 'java-library'
  id 'application'
  id 'maven-publish'
}

test {
    useJUnitPlatform()
}

sourceCompatibility = 1.11
targetCompatibility = 1.11

version = '0.0.30'

def undertowVersion = '2.1.0.Final'

repositories {
    mavenCentral()
}

mainClassName = "net.nnsfw.ApplicationServer"

dependencies {
    shadow localGroovy()
    shadow gradleApi()

    api "io.undertow:undertow-core:$undertowVersion",
            "io.undertow:undertow-servlet:$undertowVersion",
            "org.pac4j:pac4j-core:4.4.0",
            "org.pac4j:pac4j-oidc:4.4.0",
            "org.pac4j:pac4j-http:4.4.0",
            "org.pac4j:undertow-pac4j:4.1.1",
            "com.fasterxml.jackson.core:jackson-databind:2.9.6",
            "javax.inject:javax.inject:1",
            "javax.transaction:javax.transaction-api:1.3",
            "javax.persistence:javax.persistence-api:2.2",
            "org.flywaydb:flyway-core:6.1.1",
            "org.yaml:snakeyaml:1.25",
            "io.github.classgraph:classgraph:4.8.138",
            "net.bytebuddy:byte-buddy-dep:1.12.7"
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

task relocateShadowJar(type: ConfigureShadowRelocation) {
    target = tasks.shadowJar
}

tasks.shadowJar.dependsOn tasks.relocateShadowJar

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/schlumpfling42/server-fw")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("PASSWORD")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            from(components.java)
        }
    }
}
