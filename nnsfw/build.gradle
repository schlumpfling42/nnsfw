plugins {
  id "java-library"
  id "application"
  id "maven-publish"
  id "gg.jte.gradle" version "1.12.1"
}

test {
    useJUnitPlatform()
}

sourceCompatibility = 1.11
targetCompatibility = 1.11

version = "0.0.52"

def undertowVersion = "2.1.0.Final"

repositories {
    mavenCentral()
}

dependencies {
    api "io.vertx:vertx-core:4.2.5",
            "io.vertx:vertx-web:4.2.5",
            "io.vertx:vertx-sql-client:4.2.5",
            "io.vertx:vertx-reactive-streams:4.2.5",
            "io.vertx:vertx-auth-oauth2:4.2.5",
            "io.smallrye.reactive:smallrye-mutiny-vertx-auth-oauth2:2.18.1",
            "io.netty:netty-transport-native-epoll:4.1.74.Final",
            "com.fasterxml.jackson.core:jackson-databind:2.9.6",
            "javax.inject:javax.inject:1",
            "javax.transaction:javax.transaction-api:1.3",
            "javax.persistence:javax.persistence-api:2.2",
            "org.hibernate.reactive:hibernate-reactive-core:1.1.3.Final",
            "org.flywaydb:flyway-core:6.1.1",
            "org.yaml:snakeyaml:1.25",
            "io.github.classgraph:classgraph:4.8.138",
            "net.bytebuddy:byte-buddy-dep:1.12.7",
            "gg.jte:jte-runtime:1.12.1",
            "gg.jte:jte:1.12.1",
            "org.reactivestreams:reactive-streams:1.0.3",
            "io.smallrye.reactive:smallrye-mutiny-vertx-core:2.18.1",
            "io.smallrye.reactive:smallrye-mutiny-vertx-web:2.18.1"

    testImplementation "org.junit.jupiter:junit-jupiter-api:5.8.1",
            "com.h2database:h2:1.4.200",
            "io.smallrye.reactive:smallrye-mutiny-vertx-pg-client:2.18.1"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.8.1"
}

build {
  dependsOn precompileJte
}

jte {
    trimControlStructures=true
    generate()
}

jar {
  duplicatesStrategy = DuplicatesStrategy.EXCLUDE
  
  from fileTree("jte-classes") {
    include "**/*.class"
  }

  from {
    configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
  }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/schlumpfling42/server-fw")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("PASSWORD")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            from(components.java)
        }
    }
}